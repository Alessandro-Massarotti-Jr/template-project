name: Release new version

run-name: Release started by @${{ github.actor }}

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency:
      group: release
      cancel-in-progress: false
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GIT_TOKEN }}

      - name: Set up git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "bot"

      - name: Install dependencies
        run: npm install

      - name: Install standart version
        run: npm install -g standard-version

      - name: Create `.versionrc.json`
        run: |
          echo '{
            "tagPrefix": "",
            "types": [
              { "type": "feat", "section": "Features", "hidden": false },
              { "type": "fix", "section": "Bug Fixes", "hidden": false },
              { "type": "docs", "section": "Documentation", "hidden": false},
              { "type": "style", "section": "Styles", "hidden": false },
              { "type": "refactor", "section": "Code Refactoring", "hidden": false },
              { "type": "perf", "section": "Performance Improvements", "hidden": false },
              { "type": "test", "section": "Tests", "hidden": false },
              { "type": "build", "section": "Build System", "hidden": false },
              { "type": "ci", "section": "Continuous Integration", "hidden": false },
              { "type": "chore", "section": "Chores", "hidden": false },
              { "type": "revert", "section": "Reverts", "hidden": false }
            ]
          }' > .versionrc.json

      - name: release a new version
        id: release-version
        run: |
          npx standard-version --no-verify
          latest_tag=$(git describe --tags --abbrev=0)
          latest_commit=$(git log -1 --format=%B)
          git commit --amend -m "$latest_commit [skip ci]"
          git tag "$latest_tag"
          git push --follow-tags
